{#

 This file is part of the FOSCommentBundle package.

 (c) FriendsOfSymfony <http://friendsofsymfony.github.com/>

 This source file is subject to the MIT license that is bundled
 with this source code in the file LICENSE.

#}

{% block fos_comment_comment %}
<div id="fos_comment_{{ comment.id }}" class="comment fos_comment_comment_show fos_comment_comment_depth_{{ depth }}" {% if parent is defined and parent is not null %}data-parent="{{ parent.id }}"{% endif %}>

    <a class="avatar">
        {% if comment.author.image.name is not empty %}
            <img class="avatar ui image" src="{{ vich_uploader_asset(comment.author, 'imageFile') | imagine_filter('squared_thumbnail') }}">
        {% else %}
            <img class="avatar ui image" src="{{ asset('assets/images/default.png')  }}">
        {% endif %}
    </a>
    <div class="content">
        <a class="author">
            {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
            {% else %}
                {{ comment.author.alias }}
            {% endif %}
        </a>
        <div class="metadata">
            <span class="date">{{ comment.createdAt | time_diff }}</span>
        </div>
        <div id="fos_comment_comment_body_{{ comment.id }}" class="text fos_comment_comment_body">
            {% block fos_comment_comment_body %}
                {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                    {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
                {% else %}
                    {% if comment is fos_comment_raw %}
                        {{ comment.rawBody | raw }}
                    {% else %}
                        {{ comment.body | nl2br }}
                    {% endif %}
                {% endif %}
            {% endblock fos_comment_comment_body %}
        </div>
        <div class="actions">
            {% if fos_comment_can_comment(comment) %}
                <button data-url="{{ url('fos_comment_new_thread_comments', {"id": comment.thread.id}) }}" data-name="{{ comment.authorName }}" data-parent-id="{{ comment.id }}" class="ui basic mini button fos_comment_comment_reply_show_form">{% trans from 'FOSCommentBundle' %}fos_comment_comment_show_reply{% endtrans %}</button>
            {% endif %}
            {% if fos_comment_can_edit_comment(comment) %}
                <button data-container="#fos_comment_comment_body_{{ comment.id }}" data-url="{{ url("fos_comment_edit_thread_comment", {"id": comment.thread.id, "commentId": comment.id}) }}" class="ui basic mini button fos_comment_comment_edit_show_form">{% trans from 'FOSCommentBundle' %}fos_comment_comment_edit{% endtrans %}</button>
            {% endif %}
            {% if fos_comment_can_delete_comment(comment) %}
                {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                    {# undelete #}
                    <button data-url="{{ url("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value": constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_VISIBLE') }) }}" class="ui basic mini button fos_comment_comment_remove">{% trans from 'FOSCommentBundle' %}fos_comment_comment_undelete{% endtrans %}</button>
                {% else %}
                    {# delete #}
                    <button data-url="{{ url("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value":  constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')}) }}" class="ui basic mini button fos_comment_comment_remove">{% trans from 'FOSCommentBundle' %}fos_comment_comment_delete{% endtrans %}</button>
                {% endif %}
            {% endif %}
        </div>
    </div>

    <div class="fos_comment_comment_replies">
    {% if children is defined %}
        {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parent": comment, "view": view } %}
    {% endif %}
    </div>
</div>
{% endblock fos_comment_comment %}
